
@{
    ViewBag.Title = "Index";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Admin</title>
    <link rel="stylesheet" href="~/Content/wwwroot/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/wwwroot/css/site.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-white border-bottom box-shadow mb-3" style="background: #130347 !important">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index" style="color:white"><i class="far fa-snowflake"></i> Sabi | Admin Panel <i class="far fa-snowflake"></i></a>
                <div style="float:left" onclick="ShowNotifications();">
                    @if (ViewBag.VendorsShopCount != null || ViewBag.VendorsShopCount != 0)
                    {
                        <span id="counternotification" style="cursor: pointer; top:-17px" class="counternotificationMobile">@ViewBag.VendorsShopCount</span>
                    }
                    else
                    {
                        <span id="counternotification" style="cursor: pointer;display:none" class="counternotificationMobile">0</span>
                    }
                    <a id="ntfglobal" style="cursor: pointer;" title="Notification">
                        <i class="fas fa-bell topicon"></i>
                    </a>
                </div>
            </div>
        </nav>
    </header>
    <div class="MainDivAdmin">

        <div id="ShopDataDiv" style="display:none;">
            <div id="ShopData" style="display:none;">
                <table class="table table-hover">
                    <thead class="w-thead-bg">
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="filterShop">
                        @{
                            if (ViewBag.VendorsShop.Count > 0)
                            {
                                foreach (var shop in ViewBag.VendorsShop)
                                {
                                    <tr>
                                        <td>@shop.Shopid</td>
                                        <td>@shop.shopname</td>
                                        <td>@shop.CreatedDate</td>
                                        <td>
                                            <input type="button" id="acceptShop" value="Accept" onclick="AcceptRejectShop(@shop.Shopid, 'Accepted');" />
                                            <input type="button" id="rejectShop" value="Reject" onclick="AcceptRejectShop(@shop.Shopid, 'Rejected');" />
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4">
                                        <div class="w-empty-list">Record Not Found</div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div style="padding:10px;">
            <h2 id="w-head-text">Users</h2>
            <div>
                <div class="w-margin-bottom-10 w-height-35">
                    <input type="button" class="btn btn-primary w-pull-right w-margin-left-10" value="Add User" id="addUsersBtn" data-target="#userBootstrapModal" data-toggle="modal" />
                    <input type="button" class="btn btn-primary w-pull-right w-margin-left-10" value="Add Category" id="addCategoryBtn" data-target="#categoryBootstrapModal" data-toggle="modal" style="display:none;" />
                    <input type="button" class="btn btn-primary w-pull-right w-margin-left-10" value="Add Sub Category" id="addSubCategoryBtn" data-target="#subCategoryBootstrapModal" data-toggle="modal" style="display:none;" />
                    <input type="button" class="btn btn-primary w-pull-right w-margin-left-10" value="Add Item" id="addItemBtn" data-target="#itemBootstrapModal" data-toggle="modal" style="display:none;" />
                    <input type="text" class="form-control w-pull-right w-width-200 w-margin-left-10" placeholder="Search" id="searchName" onkeyup="SearchUsersByName();" />
                    <input type="text" class="form-control w-pull-right w-width-200 w-margin-left-10" placeholder="Search" id="searchSubCategoryName" onkeyup="SearchSubCategoryByName();" style="display:none;" />
                    <input type="text" class="form-control w-pull-right w-width-200 w-margin-left-10" placeholder="Search" id="searchItemName" onkeyup="SearchItemsByName();" style="display:none;" />
                    <select class="form-control w-width-200 w-pull-right w-margin-left-10" id="filterUserByType" onchange="FilterByRoleType();">
                        <option value="All">All</option>
                        <option value="Admin">Admin</option>
                        <option value="User">User</option>
                        <option value="Vendor">Vendor</option>
                    </select>
                    <select class="form-control w-width-200 w-pull-right" id="filterByType" onchange="GetData();">
                        <option value="Users">Users</option>
                        <option value="Category">Category</option>
                        <option value="SubCategory">Sub Category</option>
                        <option value="Items">Items</option>
                    </select>
                </div>
                <div id="usersData">
                    <table class="table table-hover">
                        <thead class="w-thead-bg">
                            <tr>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Contact</th>
                                <th>Username</th>
                                <th>Type</th>
                                <th>Status</th>
                                <th>Shop Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="filterUser">
                            @{
                                if (ViewBag.Users.Count > 0)
                                {
                                    foreach (var user in ViewBag.Users)
                                    {
                                        <tr>
                                            <td>@user.UserId</td>
                                            <td>@user.name</td>
                                            <td>@user.EmailAddress</td>
                                            <td>@user.Contact</td>
                                            <td>@user.username</td>
                                            <td id="FilterRoleType">@user.RoleType</td>
                                            <td>
                                                @if (user.isDeleted == "true")
                                                {
                                                    <i class="fa fa-times" aria-hidden="true"></i>
                                                }
                                                else
                                                {
                                                    <i class="fa fa-check" aria-hidden="true"></i>
                                                }
                                            </td>
                                            <td>
                                                @if (user.ShopName == "NA")
                                                {
                                                    @user.ShopName
                                                }
                                                else
                                                {
                                                    <a class="w-shopName-bg" onclick="AddShopItemData(@user.UserId)">@user.ShopName</a>
                                                }
                                            </td>
                                            <td>
                                                <input type="button" id="editUser" value="Edit" onclick="UpdateUser(@user.UserId, '@user.name', '@user.EmailAddress', '@user.Contact', '@user.username', '@user.RoleID', '@user.Address');" />
                                                <input type="button" id="deleteUser" value="Delete" onclick="DeleteUser(@user.UserId);" />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7">
                                            <div class="w-empty-list">Record Not Found</div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div id="categoryData" style="display:none;">
                    <table class="table table-hover">
                        <thead class="w-thead-bg">
                            <tr>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="filterCategory">
                            @{
                                if (ViewBag.Categories.Count > 0)
                                {
                                    foreach (var category in ViewBag.Categories)
                                    {
                                        <tr>
                                            <td>@category.CategoryId</td>
                                            <td>@category.CategoryName</td>
                                            <td>@category.CreatedDate</td>
                                            <td>
                                                <input type="button" id="viewSubCategory" value="View Sub Category" onclick="ViewSubCategory(@category.CategoryId);" />
                                                <input type="button" id="editCategory" value="Edit" onclick="GetUpdateCategory(@category.CategoryId, '@category.CategoryName');" />
                                                <input type="button" id="deleteCategory" value="Delete" onclick="DeleteCategory(@category.CategoryId);" />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4">
                                            <div class="w-empty-list">Record Not Found</div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div id="subCategoryData" style="display:none;">
                    <table class="table table-hover">
                        <thead class="w-thead-bg">
                            <tr>
                                <th>Id</th>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="filterSubCategory">
                            @{
                                if (ViewBag.SubCategories.Count > 0)
                                {
                                    foreach (var subCategory in ViewBag.SubCategories)
                                    {
                                        <tr>
                                            <td>@subCategory.SubCategorieId</td>
                                            <td>
                                                @if (subCategory.image == null)
                                                {
                                                    <img src="~/Images/noimage.jpg" class="Emp44by44" style="height: 70px; width: 70px; border-radius: 50px;">
                                                }
                                                else
                                                {
                                                    <img src="@string.Format("/CompanyImages/{0}", subCategory.image)" class="Emp44by44" style="height: 70px; width: 70px; border-radius: 50px;">
                                                }
                                            </td>
                                            <td>@subCategory.name</td>
                                            <td>@subCategory.CreatedDate</td>
                                            <td>
                                                <input type="button" id="viewItems" value="View Items" onclick="ViewItems(@subCategory.SubCategorieId);" />
                                                <input type="button" id="editSubCategory" value="Edit" onclick="GetUpdateSubCategory(@subCategory.SubCategorieId, @subCategory.Shopid, '@subCategory.name', '@subCategory.image');" />
                                                <input type="button" id="deleteSubCategory" value="Delete" onclick="DeleteSubCategory(@subCategory.SubCategorieId);" />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5">
                                            <div class="w-empty-list">Record Not Found</div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div id="ItemsData" style="display:none;">
                    <table class="table table-hover">
                        <thead class="w-thead-bg">
                            <tr>
                                <th>Id</th>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Weight</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="filterItems">
                            @{
                                if (ViewBag.Items.Count > 0)
                                {
                                    foreach (var item in ViewBag.Items)
                                    {
                                        <tr>
                                            <td>@item.ItemId</td>
                                            <td>
                                                @if (item.image == null)
                                                {
                                                    <img src="~/Images/noimage.jpg" class="Emp44by44" style="height: 70px; width: 70px; border-radius: 50px;">
                                                }
                                                else
                                                {
                                                    <img src="@string.Format("/CompanyImages/{0}", item.image)" class="Emp44by44" style="height: 70px; width: 70px; border-radius: 50px;">
                                                }
                                            </td>
                                            <td>@item.name</td>
                                            <td>@item.Price</td>
                                            <td>@item.Weight</td>
                                            <td>@item.CreatedDate</td>
                                            <td>
                                                <input type="button" id="editItem" value="Edit" onclick="GetUpdateItem(@item.ItemId, '@item.name', '@item.Weight', '@item.Price', '@item.image', @item.SubCategorieId );" />
                                                <input type="button" id="deleteItem" value="Delete" onclick="DeleteItem(@item.ItemId);" />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7">
                                            <div class="w-empty-list">Record Not Found</div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>

        <div id="addUser">
            @{
                using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { id = "addUserForm" }))
                {

                    @*user strat*@
                    <div class="modal fade " id="userBootstrapModal">
                        <div class="modal-dialog w-user-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Add User</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="UserDiv">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>First Name :</label>
                                                    <input type="text" class="form-control" id="FirstName" name="FirstName" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Last Name :</label>
                                                    <input type="text" class="form-control" id="LastName" name="LastName" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Email Address :</label>
                                                    <input type="email" class="form-control" id="EmailAddress" name="EmailAddress" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Contact :</label>
                                                    <input type="text" class="form-control" id="Contact" name="Contact" />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Username :</label>
                                                    <input type="text" class="form-control" id="Username" name="Username" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Password :</label>
                                                    <input type="password" class="form-control" id="Password" name="Password" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Type :</label>
                                                    <select class="form-control" id="RoleType" name="RoleType" onchange="GetShoplist();" required>
                                                        <option value="">Select</option>
                                                        <option value="1">Admin</option>
                                                        <option value="2">User</option>
                                                        <option value="3">Vendor</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Address :</label>
                                                    <input type="text" class="form-control" id="Address" name="Address" />
                                                </div>
                                                <div class="col-md-12" id="vendorCategoryDrpDiv" style="display:none;">
                                                    <label>Category :</label>
                                                    <select class="form-control" id="VendorCategoryDrp" name="VendorCategoryDrp" required>
                                                        @foreach (var item in ViewBag.Categories)
                                                        {
                                                            <option value="@item.CategoryId">@item.CategoryName</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Add" onclick="SaveUserData();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*user end*@


                }
            }
        </div>

        <input type="hidden" id="openUserModal" data-target="#updateUserBootstrapModal" data-toggle="modal" />

        <div id="editUser">
            @{
                using (Html.BeginForm("UpdateUser", "User", FormMethod.Post, new { id = "updateUserForm" }))
                {
                    @*user strat*@
                    <div class="modal fade " id="updateUserBootstrapModal">
                        <div class="modal-dialog w-user-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Update User</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="UserDiv">
                                            <input type="hidden" id="UpdateUserId" name="UpdateUserId" />
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Name :</label>
                                                    <input type="text" class="form-control" id="UpdateUserName" name="UpdateUserName" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Email Address :</label>
                                                    <input type="email" class="form-control" id="UpdateUserEmailAddress" name="UpdateUserEmailAddress" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Contact :</label>
                                                    <input type="text" class="form-control" id="UpdateUserContact" name="UpdateUserContact" />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Username :</label>
                                                    <input type="text" class="form-control" id="UpdateUserUsername" name="UpdateUserUsername" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Type :</label>
                                                    <select class="form-control" id="UpdateRoleType" name="UpdateRoleType" required>
                                                        <option value="">Select</option>
                                                        <option value="1">Admin</option>
                                                        <option value="2">User</option>
                                                        <option value="3">Vendor</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Address :</label>
                                                    <input type="text" class="form-control" id="UpdateUserAddress" name="UpdateUserAddress" />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Update" onclick="UpdateUserData();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*user end*@


                }
            }
        </div>

        @* add/update category start*@
        <div id="addCategory">
            @{
                using (Html.BeginForm("AddCategory", "Categories", FormMethod.Post, new { id = "addCategoryForm" }))
                {

                    @*category strat*@
                    <div class="modal fade " id="categoryBootstrapModal">
                        <div class="modal-dialog w-category-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Add Category</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="CategoryDiv">
                                            <div class="row">

                                                <div class="col-md-12">
                                                    <label>Category Name :</label>
                                                    <input type="text" class="form-control" id="CategoryName" name="CategoryName" required />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Add" onclick="SaveCategoryData();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*category end*@


                }
            }
        </div>

        <input type="hidden" id="openCategoryModal" data-target="#updateCategoryBootstrapModal" data-toggle="modal" />

        <div id="editCategory">
            @{
                using (Html.BeginForm("UpdateCategory", "Categories", FormMethod.Post, new { id = "updateCategoryForm" }))
                {
                    @*category strat*@
                    <div class="modal fade " id="updateCategoryBootstrapModal">
                        <div class="modal-dialog w-category-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Update Category</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="UserDiv">
                                            <input type="hidden" id="UpdateCategoryId" name="UpdateCategoryId" />
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Category Name :</label>
                                                    <input type="text" class="form-control" id="UpdateCategoryName" name="UpdateCategoryName" />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Update" onclick="UpdateCategoryData();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*category end*@


                }
            }
        </div>
        @* add/update category end*@

        @* add/update subcategory start*@
        <div id="addSubCategory">
            @{
                using (Html.BeginForm("AddSubCategory", "SubCategory", FormMethod.Post, new { id = "addSubCategoryForm" }))
                {

                    @*category strat*@
                    <div class="modal fade " id="subCategoryBootstrapModal">
                        <div class="modal-dialog w-subCategory-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Add Sub Category</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="SubCategoryDiv">
                                            <div class="row">

                                                <div class="col-md-12">
                                                    <label>Sub Category Name :</label>
                                                    <input type="text" class="form-control" id="SubCategoryName" name="SubCategoryName" required />
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Shop :</label>
                                                    <select class="form-control" id="VendorShopDrp" name="VendorShopDrp" required>
                                                        @foreach (var item in ViewBag.Shops)
                                                        {
                                                            <option value="@item.Shopid">@item.shopname</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Image :</label>
                                                    <input type="file" class="" id="SubCategoryImage" name="SubCategoryImage" multiple />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Add" onclick="SaveSubCategoryData();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*category end*@


                }
            }
        </div>

        <input type="hidden" id="openSubCategoryModal" data-target="#updateSubCategoryBootstrapModal" data-toggle="modal" />

        <div id="editSubCategory">
            @{
                using (Html.BeginForm("UpdateSubCategory", "SubCategory", FormMethod.Post, new { id = "updateSubCategoryForm" }))
                {
                    @*category strat*@
                    <div class="modal fade " id="updateSubCategoryBootstrapModal">
                        <div class="modal-dialog w-subCategory-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Update Sub Category</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="SubCategoryDiv">
                                            <input type="hidden" id="UpdateSubCategoryId" name="UpdateSubCategoryId" />
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label>Sub Category Name :</label>
                                                    <input type="text" class="form-control" id="UpdateSubCategoryName" name="UpdateSubCategoryName" required />
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Shop :</label>
                                                    <select class="form-control" id="UpdateSVendorShopDrp" name="UpdateSVendorShopDrp" required>
                                                        @foreach (var item in ViewBag.Shops)
                                                        {
                                                            <option value="@item.Shopid">@item.shopname</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Image :</label>
                                                    <input type="file" class="" id="UpdateSubCategoryImage" name="UpdateSubCategoryImage" multiple />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Update" onclick="UpdateSubCategoryData();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*category end*@


                }
            }
        </div>
        @* add/update subcategory end*@

        @* show subcategory start*@

        <input type="hidden" id="openShowSubCategoryModal" data-target="#showSubCategoryBootstrapModal" data-toggle="modal" />

        <div id="showSubCategory">

            <div class="modal fade " id="showSubCategoryBootstrapModal">
                <div class="modal-dialog w-subCategory-modal-dialog" style="max-width: 70% !important;">
                    <div class="modal-content">
                        <!--Header-->
                        <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                            <h4 class="title" style="color:white;">Sub Categories</h4>

                            <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <i class="fas fa-times" style="color:white;"></i>
                            </button>
                        </div>
                        <div style="width:100%; overflow:auto" class="ModelTrack">
                            <div class="modal-body" style="width:100%">
                                <div id="showSubCategoryDiv">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        @* show subcategory end*@

        @* add/update item start*@
        <div id="addItem">
            @{
                using (Html.BeginForm("AddItem", "Items", FormMethod.Post, new { id = "addItemForm" }))
                {

                    @*item strat*@
                    <div class="modal fade " id="itemBootstrapModal">
                        <div class="modal-dialog w-item-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Add Item</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="ItemDiv">
                                            <div class="row">

                                                <div class="col-md-6">
                                                    <label>Item Name :</label>
                                                    <input type="text" class="form-control" id="itemName" name="itemName" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Item Weight :</label>
                                                    <input type="text" class="form-control" id="itemWeight" name="itemWeight" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Item Price :</label>
                                                    <input type="text" class="form-control" id="itemPrice" name="itemPrice" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Shop :</label>
                                                    <select class="form-control" id="shopIddrp" name="shopIddrp" onchange="GetAllSubCategoriesList()" required>
                                                        @foreach (var item in ViewBag.Shops)
                                                        {
                                                            <option value="@item.Shopid">@item.shopname</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12" id="adminSubcategoryDrop">
                                                    <label>Sub Category :</label>
                                                    <select class="form-control" id="SubCategorydrp" name="SubCategorydrp" required>
                                                        @foreach (var item in ViewBag.SubCategories)
                                                        {
                                                            <option value="@item.SubCategorieId">@item.name</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Image :</label>
                                                    <input type="file" class="" id="ItemImage" name="ItemImage" multiple />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Add" onclick="SaveItemInfo();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*item end*@


                }
            }
        </div>

        <input type="hidden" id="openItemModal" data-target="#updateItemBootstrapModal" data-toggle="modal" />

        <div id="editItem">
            @{
                using (Html.BeginForm("UpdateItem", "Items", FormMethod.Post, new { id = "updateItemForm" }))
                {
                    @*item strat*@
                    <div class="modal fade " id="updateItemBootstrapModal">
                        <div class="modal-dialog w-item-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Update Item</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="ItemDiv">
                                            <input type="hidden" id="updateItemId" name="updateItemId" />
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label>Item Name :</label>
                                                    <input type="text" class="form-control" id="updateItemName" name="updateItemName" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Item Weight :</label>
                                                    <input type="text" class="form-control" id="updateItemWeight" name="updateItemWeight" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Item Price :</label>
                                                    <input type="text" class="form-control" id="updateItemPrice" name="updateItemPrice" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Shop :</label>
                                                    <select class="form-control" id="UpdateShopIddrp" name="UpdateShopIddrp" onchange="GetAllUpdateSubCategoriesList()" required>
                                                        @foreach (var item in ViewBag.Shops)
                                                        {
                                                            <option value="@item.Shopid">@item.shopname</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12" id="adminUpdateSubcategoryDrop">
                                                    <label>Sub Category :</label>
                                                    <select class="form-control" id="UpdateSubCategorydrp" name="UpdateSubCategorydrp" required>
                                                        @foreach (var item in ViewBag.SubCategories)
                                                        {
                                                            <option value="@item.SubCategorieId">@item.name</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Image :</label>
                                                    <input type="file" class="" id="ItemImage" name="ItemImage" multiple />
                                                </div>
                                            </div>
                                        </div>

                                        <input type="button" class="btn btn-info" value="Update" onclick="UpdateItemInfo();" style="float:right;margin:10px 0;" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*item end*@
                }
            }
        </div>

        <input type="hidden" id="openShopItemModal" data-target="#shopItemBootstrapModal" data-toggle="modal" />
        <div id="addShopItem">
            @{
                using (Html.BeginForm("AddShopItem", "Items", FormMethod.Post, new { id = "addShopItemForm" }))
                {

                    @*item strat*@
                    <div class="modal fade " id="shopItemBootstrapModal">
                        <div class="modal-dialog w-item-modal-dialog">
                            <div class="modal-content">
                                <!--Header-->
                                <div class="modal-header light-blue darken-3 white-text" style="background:#0273B6;">
                                    <h4 class="title" style="color:white;">Add Item</h4>

                                    <button style="color:white;" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <i class="fas fa-times" style="color:white;"></i>
                                    </button>
                                </div>
                                <div style="width:100%; overflow:auto" class="ModelTrack">
                                    <div class="modal-body" style="width:100%">
                                        <div id="ItemDiv">
                                            <div class="row">

                                                <input type="hidden" class="form-control" id="shopUserId" name="shopUserId" required />
                                                <div class="col-md-6">
                                                    <label>Item Name :</label>
                                                    <input type="text" class="form-control" id="shopItemName" name="shopItemName" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Item Weight :</label>
                                                    <input type="text" class="form-control" id="shopItemWeight" name="shopItemWeight" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Item Price :</label>
                                                    <input type="text" class="form-control" id="shopItemPrice" name="shopItemPrice" required />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Shop :</label>
                                                    <input type="text" class="form-control" id="itemShopName" name="itemShopName" readonly />
                                                </div>
                                                <div class="col-md-6">
                                                    <label>Shop :</label>
                                                    <select class="form-control" id="itemShopName" name="itemShopName" onchange="GetShopSubCategories()" required>
                                                        @foreach (var item in ViewBag.Shops)
                                                        {
                                                            <option value="@item.Shopid">@item.shopname</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12" id="shopSubCategorydrpDiv">
                                                    <label>Sub Category :</label>
                                                    <select class="form-control" id="shopSubCategorydrp" name="shopSubCategorydrp" required>
                                                        @foreach (var item in ViewBag.SubCategories)
                                                        {
                                                            <option value="@item.SubCategorieId">@item.name</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="col-md-12">
                                                    <label>Image :</label>
                                                    <input type="file" class="" id="shopItemImage" name="shopItemImage" multiple />
                                                </div>
                                            </div>

                                            <input type="button" class="btn btn-info" value="Add" onclick="SaveShopItemInfo();" style="float:right;margin:10px 0;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*item end*@


                }
            }
        </div>
        @* add/update item end*@

        <style>
            .w-width-200 {
                width: 200px;
            }

            .w-height-35 {
                height: 35px;
            }

            .w-pull-right {
                float: right;
            }

            .w-pull-left {
                float: left;
            }

            .w-thead-bg {
                background-color: rgb(25, 126, 89);
                color: #ffffff;
            }

            .w-empty-list {
                text-align: center;
                color: red;
                width: 100%;
            }

            .w-margin-bottom-10 {
                margin-bottom: 10px;
            }

            .w-margin-left-10 {
                margin-left: 10px;
            }

            .w-shopName-bg {
                cursor: pointer;
                text-decoration: underline !important;
                color: #1b6ec2 !important;
            }
        </style>

        <script>

            function UpdateUser(userId, name, email, contact, username, roleType, address) {
                debugger;
                $("#UpdateUserId").val(userId);
                $("#UpdateUserName").val(name);
                $("#UpdateUserEmailAddress").val(email);
                $("#UpdateUserContact").val(contact);
                $("#UpdateUserUsername").val(username);
                $("#UpdateRoleType").val(roleType);
                $("#UpdateUserAddress").val(address);
                $("#openUserModal").trigger("click");
            }

            function DeleteUser(userId) {
                $.ajax({
                    url: '/User/DeleteUser?userId=' + userId,
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'User deleted successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            window.location.reload();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'User not deleted.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function SaveUserData() {
                debugger;
                //User/Index
                if (document.getElementById('FirstName').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter First Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('LastName').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Last Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('EmailAddress').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Email Address.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('Username').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Username.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('Password').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Password.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('RoleType').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Type.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                $.ajax({
                    type: "POST",
                    async: "true",
                    data: $("#addUserForm").serialize(),
                    url: "/User/AddUser",
                    contenttype: 'application/html; charset=utf-8',
                    datatype: 'html',
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'User added successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            window.location.reload();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'User already exist.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function UpdateUserData() {
                debugger;
                //User/Index
                if (document.getElementById('UpdateUserName').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('UpdateUserEmailAddress').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Email Address.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('UpdateUserUsername').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Username.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('UpdateRoleType').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Type.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                $.ajax({
                    type: "POST",
                    async: "true",
                    data: $("#updateUserForm").serialize(),
                    url: "/User/UpdateUser",
                    contenttype: 'application/html; charset=utf-8',
                    datatype: 'html',
                    success: function (data) {
                        debugger;
                        if (data == "success") {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'User updated successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            window.location.reload();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Record not updated.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function SearchUsersByName() {
                debugger;
                var name = document.getElementById("searchName").value;
                name = name.toLowerCase();
                $("#filterUser tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(name) > -1)
                });
            }

            function SearchSubCategoryByName() {
                debugger;
                var name = document.getElementById("searchSubCategoryName").value;
                name = name.toLowerCase();
                $("#filterSubCategory tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(name) > -1)
                });
            }

            function SearchItemsByName() {
                debugger;
                var name = document.getElementById("searchItemName").value;
                name = name.toLowerCase();
                $("#filterItems tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(name) > -1)
                });
            }

            function FilterByRoleType() {
                debugger;
                var type = document.getElementById("filterUserByType").value;
                $.ajax({
                    type: "GET",
                    url: '/User/GetUsersByType?type=' + type,
                    success: function (response) {
                        debugger;
                        $("#filterUser").html(response);
                    }
                });
            }

            function GetData() {
                debugger;
                //User/Index
                var name = document.getElementById("filterByType").value;
                if (name == "Users") {
                    $("#usersData").show();
                    $("#categoryData").hide();
                    $("#subCategoryData").hide();
                    $("#ItemsData").hide();
                    $("#filterUserByType").show();
                    $("#searchName").show();
                    $("#searchSubCategoryName").hide();
                    $("#searchItemName").hide();
                    $("#addUsersBtn").show();
                    $("#addCategoryBtn").hide();
                    $("#addSubCategoryBtn").hide();
                    $("#addItemBtn").hide();
                    $("#w-head-text").text("Users");
                    $("#filterUserByType").val("All");
                    $("#searchName").val("");
                    FilterByRoleType();
                }
                else if (name == "Category") {
                    $("#usersData").hide();
                    $("#categoryData").show();
                    $("#subCategoryData").hide();
                    $("#ItemsData").hide();
                    $("#filterUserByType").hide();
                    $("#searchName").hide();
                    $("#searchSubCategoryName").hide();
                    $("#searchItemName").hide();
                    $("#addUsersBtn").hide();
                    $("#addCategoryBtn").show();
                    $("#addSubCategoryBtn").hide();
                    $("#addItemBtn").hide();
                    $("#w-head-text").text("Categories");
                    GetAllCategories();
                }
                else if (name == "SubCategory") {
                    $("#usersData").hide();
                    $("#categoryData").hide();
                    $("#subCategoryData").show();
                    $("#ItemsData").hide();
                    $("#filterUserByType").hide();
                    $("#searchName").hide();
                    $("#searchSubCategoryName").show();
                    $("#searchItemName").hide();
                    $("#addUsersBtn").hide();
                    $("#addCategoryBtn").hide();
                    $("#addSubCategoryBtn").show();
                    $("#addItemBtn").hide();
                    $("#w-head-text").text("Sub Categories");
                    ViewSubCategory(0);
                }
                else {
                    $("#usersData").hide();
                    $("#categoryData").hide();
                    $("#subCategoryData").hide();
                    $("#ItemsData").show();
                    $("#filterUserByType").hide();
                    $("#searchName").hide();
                    $("#searchSubCategoryName").hide();
                    $("#searchItemName").show();
                    $("#addUsersBtn").hide();
                    $("#addCategoryBtn").hide();
                    $("#addSubCategoryBtn").hide();
                    $("#addItemBtn").show();
                    $("#w-head-text").text("Items");
                    ViewItems(0);
                }
            }

            function GetShoplist() {
                var roleId = document.getElementById("RoleType").value;
                if (roleId == "3")
                    $("#vendorCategoryDrpDiv").show();
                else
                    $("#vendorCategoryDrpDiv").hide();
            }

        </script>

        <script>
            //Category
            function GetUpdateCategory(categoryId, name) {
                debugger;
                $("#UpdateCategoryId").val(categoryId);
                $("#UpdateCategoryName").val(name);
                $("#openCategoryModal").trigger("click");
            }

            function DeleteCategory(categoryId) {
                debugger;
                $.ajax({
                    url: '/Categories/DeleteCategory?categoryId=' + categoryId,
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Category deleted successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllCategories();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Category not deleted.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function GetAllCategories() {
                debugger;
                $.ajax({
                    type: "GET",
                    url: '/Categories/GetAllCategories',
                    success: function (response) {
                        debugger;
                        $("#filterCategory").html(response);
                    }
                });
            }

            function SaveCategoryData() {
                debugger;
                //User/Index
                if (document.getElementById('CategoryName').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Plaese enter Category Name',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                $.ajax({
                    type: "POST",
                    async: "true",
                    data: $("#addCategoryForm").serialize(),
                    url: "/Categories/AddCategory",
                    contenttype: 'application/html; charset=utf-8',
                    datatype: 'html',
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Category added successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllCategories();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Category already exist',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function UpdateCategoryData() {
                debugger;
                //User/Index
                if (document.getElementById('CategoryName').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Plaese enter Category Name',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                $.ajax({
                    type: "POST",
                    async: "true",
                    data: $("#updateCategoryForm").serialize(),
                    url: "/Categories/UpdateCategory",
                    contenttype: 'application/html; charset=utf-8',
                    datatype: 'html',
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Category updated successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllCategories();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Record not updated.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

        </script>

        <script>
            //Sub Category
            function showSubCategoryDataTable() {
                debugger;
                $("#usersData").hide();
                $("#categoryData").hide();
                $("#subCategoryData").show();
                $("#ItemsData").hide();
                $("#filterUserByType").hide();
                $("#searchName").hide();
                $("#searchSubCategoryName").show();
                $("#searchItemName").hide();
                $("#addUsersBtn").hide();
                $("#addCategoryBtn").hide();
                $("#addSubCategoryBtn").show();
                $("#addItemBtn").hide();
                $("#w-head-text").text("Sub Categories");
            }

            function ViewSubCategory(shopId) {
                debugger;
                $.ajax({
                    type: "GET",
                    url: '/SubCategory/GetAllSubCategoriesByCategory?shopId=' + shopId,
                    success: function (response) {
                        debugger;
                        $("#filterSubCategory").html(response);
                        showSubCategoryDataTable();
                    }
                });
            }

            function GetUpdateSubCategory(subCategoryId, shopId, name, image) {
                debugger;
                $("#UpdateSubCategoryId").val(subCategoryId);
                $("#UpdateSVendorShopDrp").val(shopId);
                $("#UpdateSubCategoryName").val(name);
                $("#UpdateSubCategoryImage").val(image);
                $("#openSubCategoryModal").trigger("click");
            }

            function DeleteSubCategory(subCategoryId) {
                debugger;
                $.ajax({
                    url: '/SubCategory/DeleteSubCategory?subCategoryId=' + subCategoryId,
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Sub Category deleted successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllSubCategories();
                        }
                        else {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Sub Category not deleted.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function GetAllSubCategories() {
                debugger;
                $.ajax({
                    type: "GET",
                    url: '/SubCategory/GetAllSubCategories',
                    success: function (response) {
                        debugger;
                        $("#filterSubCategory").html(response);
                    }
                });
            }

            function SaveSubCategoryData() {
                debugger;
                //User/Index

                if (document.getElementById('SubCategoryName').value == "") {


                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Sub Category Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('VendorShopDrp').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Shop.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                f = new FormData($("#addSubCategoryForm")[0]);

                $.ajax({
                    type: "POST",
                    async: "true",
                    data: f,
                    url: "/SubCategory/AdminAddSubCategory",
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Sub Category added successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllSubCategories();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Sub Category already exist.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function UpdateSubCategoryData() {
                debugger;
                //User/Index
                if (document.getElementById('UpdateSubCategoryName').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Sub Category Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('UpdateSVendorShopDrp').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Shop.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                f = new FormData($("#updateSubCategoryForm")[0]);

                $.ajax({
                    type: "POST",
                    async: "true",
                    data: f,
                    url: "/SubCategory/UpdateSubCategory",
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Sub Category updated successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllSubCategories();
                        }
                        else {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Record not updated.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function GetAllSubCategoriesList() {
                debugger;
                //shopSubCategorydrpDiv
                var shopid = $("#shopIddrp").val();
                $.ajax({
                    type: "GET",
                    url: '/SubCategory/GetAllSubCategoriesListByShopId?shopid=' + shopid,
                    success: function (response) {
                        debugger;
                        $("#adminSubcategoryDrop").html(response);
                    }
                });
            }

            function GetAllUpdateSubCategoriesList() {
                debugger;
                //shopSubCategorydrpDiv
                var shopid = $("#UpdateShopIddrp").val();
                $.ajax({
                    type: "GET",
                    url: '/SubCategory/GetUpdateSubCategoriesByShopId?shopid=' + shopid,
                    success: function (response) {
                        debugger;
                        $("#adminUpdateSubcategoryDrop").html(response);
                    }
                });
            }

            function GetShopSubCategories() {
                debugger;
                //shopSubCategorydrpDiv
                var shopid = $("#itemShopName").val();
                $.ajax({
                    type: "GET",
                    url: '/SubCategory/GetShopSubCategoriesByShopId?shopid=' + shopid,
                    success: function (response) {
                        debugger;
                        $("#shopSubCategorydrpDiv").html(response);
                    }
                });
            }
        </script>

        <script>
            //Item

            function showItemDataTable() {
                debugger;
                $("#usersData").hide();
                $("#categoryData").hide();
                $("#subCategoryData").hide();
                $("#ItemsData").show();
                $("#filterUserByType").hide();
                $("#searchName").hide();
                $("#searchSubCategoryName").hide();
                $("#searchItemName").show();
                $("#addUsersBtn").hide();
                $("#addCategoryBtn").hide();
                $("#addSubCategoryBtn").hide();
                $("#addItemBtn").show();
                $("#w-head-text").text("Items");
            }

            function GetAllItems() {
                debugger;
                $.ajax({
                    type: "GET",
                    url: '/Items/GetAllItems',
                    success: function (response) {
                        debugger;
                        $("#filterItems").html(response);
                    }
                });
            }

            function ViewItems(subCategorieId) {
                debugger;
                $.ajax({
                    type: "GET",
                    url: '/Items/GetAllItemsBySubCategory?subCategorieId=' + subCategorieId,
                    success: function (response) {
                        debugger;
                        $("#filterItems").html(response);
                        showItemDataTable();
                    }
                });
            }

            function SaveShopItemInfo() {
                debugger;
                if (document.getElementById('shopItemName').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'CPlease enter Item Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('shopItemWeight').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Weight.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('shopItemPrice').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Price.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('shopSubCategorydrp').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Sub Category.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                f = new FormData($("#addShopItemForm")[0]);

                $.ajax({
                    url: '/Items/AddShopItem',
                    type: 'POST',
                    data: f,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {
                            $(".close").trigger("click");
                            showItemDataTable();
                            GetAllItems();
                        }
                        else {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Item already exist.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function SaveItemInfo() {
                debugger;
                if (document.getElementById('itemName').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('itemWeight').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Weight.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('itemPrice').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Price.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('shopIddrp').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Shop.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('SubCategorydrp').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Sub Category.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                f = new FormData($("#addItemForm")[0]);

                $.ajax({
                    url: '/Items/AddItem',
                    type: 'POST',
                    data: f,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {
                            debugger;
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Item added successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllItems();
                        }
                        else {
                            debugger;

                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Item already exist.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function GetUpdateItem(itemId, itemName, itemWeight, itemPrice, itemImage, subCategoryId) {
                debugger;
                $("#updateItemId").val(itemId);
                $("#updateItemName").val(itemName);
                $("#updateItemWeight").val(itemWeight);
                $("#updateItemPrice").val(itemPrice);
                $("#updateItemImage").val(itemImage);
                $("#UpdateSubCategorydrp").val(subCategoryId);
                $.ajax({
                    type: "GET",
                    url: '/Items/GetShopId?subCategoryId=' + subCategoryId,
                    success: function (response) {
                        debugger;
                        $("#UpdateShopIddrp").val(response);
                        $("#openItemModal").trigger("click");
                    }
                });

            }

            function UpdateItemInfo() {
                debugger;
                if (document.getElementById('updateItemName').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Name.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('updateItemWeight').value == "") {

                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Weight.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('updateItemPrice').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Please enter Item Price.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('UpdateShopIddrp').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Shop.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                if (document.getElementById('UpdateSubCategorydrp').value == "") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'warning',
                        title: 'Select one Sub Category.',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }

                f = new FormData($("#updateItemForm")[0]);

                $.ajax({
                    url: '/Items/UpdateItem',
                    type: 'POST',
                    data: f,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Item updated successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllItems();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Record not updated.',
                                showConfirmButton: false,
                                timer: 1500
                            });

                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });
            }

            function DeleteItem(itemId) {
                debugger;

                $.ajax({
                    url: '/Items/DeleteItem?itemId=' + itemId,
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        debugger;
                        if (data == "success") {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Item deleted successfully.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            $(".close").trigger("click");
                            GetAllItems();
                        }
                        else {
                            Swal.fire({
                                position: 'top-end',
                                icon: 'warning',
                                title: 'Item not deleted.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return;
                        }
                    },
                    error: function () {
                        debugger;
                        alert("Error");
                    }
                });

            }

            function AddShopItemData(userId) {
                debugger;
                $("#shopUserId").val(userId);
                $.ajax({
                    type: "GET",
                    url: '/SubCategory/GetSubCategoriesByShopId?userId=' + userId,
                    success: function (response) {
                        debugger;
                        $("#shopSubCategorydrpDiv").html(response);
                        $.ajax({
                            type: "GET",
                            url: '/Items/GetShopName?userId=' + userId,
                            success: function (response) {
                                debugger;
                                $("#itemShopName").val(response);
                            }
                        });
                    }
                });

                $("#openShopItemModal").trigger("click");
            }

        </script>

        <script>
            function ShowNotifications() {
                debugger;
                $("#ShopDataDiv").show();
            }

            function AcceptRejectShop(shopId, status) {
                debugger;
                $.ajax({
                    type: "GET",
                    url: '/Vendor/AcceptRejectShop?shopId=' + shopId + '&&status=' + status,
                    success: function (response) {
                        debugger;
                        $("#ShopDataDiv").hide();
                        //$("#filterItems").html(response);
                    }
                });

            }
        </script>

    </div>

    <script src="~/Content/wwwroot/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/Content/wwwroot/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/wwwroot/js/site.js" asp-append-version="true"></script>
</body>
</html>



